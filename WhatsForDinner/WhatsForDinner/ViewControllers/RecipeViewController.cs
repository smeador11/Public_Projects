// This file has been autogenerated from a class added in the UI designer.

using System;
using WhatsForDinner.ViewControllers.ViewUtilities;
using Foundation;
using UIKit;
using WhatsForDinner.JsonModels;
using WhatsForDinner.Presenters;
using WhatsForDinner.Presenters.Contracts;
using WhatsForDinner.ViewControllers.Contracts;

namespace WhatsForDinner.ViewControllers
{
	public partial class RecipeViewController : BaseWhatsForDinnerViewController, RecipeViewControllerInterface
	{

        public RecipeJsonModel Recipe { get; set; }
        public IngredientJsonModel[] MissingIngredients { get; set; }
        public IngredientJsonModel[] UsedIngredients { get; set; }

        public Action<IngredientJsonModel[], IngredientJsonModel[]> ShoppingListButtonClicked { get; set; }

        RecipePresenterInterface Presenter = new RecipePresenter();
		public RecipeViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            if (MissingIngredients.Length > 0)
            {
                var checklistBtn = new UIBarButtonItem();
                checklistBtn.Clicked += ChecklistBtn_Clicked;
                checklistBtn.Image = UIImage.FromFile("checklist.png");
                NavigationItem.RightBarButtonItem = checklistBtn;
            }
            Presenter.BindToView(this, Recipe);
        }

        private void ChecklistBtn_Clicked(object sender, EventArgs e)
        {
            ShoppingListButtonClicked?.Invoke(MissingIngredients, UsedIngredients);
        }

        public void SetViewData(RecipeJsonModel recipe)
        {
            RecipeTitleLabel.Text = recipe.RecipeTitle;
            RecipeInstructionsTextView.Text = recipe.RecipeInstructions;
            RecipeReadyMinsLabel.Text = recipe.RecipeReadyInMinutes.ToString();
            RecipeImageView.Image = iOSViewUtilities.DownloadImageFromUrl(recipe.RecipeImage);
            RecipeServingsLabel.Text = recipe.RecipeServings.ToString();
        }

        public void MoveToShoppingListViewController(IngredientJsonModel[] missingIngredients, IngredientJsonModel[] usedIngredients)
        {
            InvokeOnMainThread(() => NavigationController.PushViewController(ControllerFactory.GetShoppingListViewController(Storyboard, missingIngredients, usedIngredients), false));
        }
    }
}

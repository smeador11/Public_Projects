// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using CoreLocation;
using Foundation;
using MapKit;
using UIKit;
using WhatsForDinner.ViewControllers.ViewUtilities;
using Xamarin.Essentials;
using static Xamarin.Essentials.Permissions;

namespace WhatsForDinner.ViewControllers
{
	public partial class DonateFoodMapViewController : BaseWhatsForDinnerViewController
	{
		public DonateFoodMapViewController (IntPtr handle) : base (handle)
		{
		}
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            Title = "Donate Recipe Ingredients";
            CLLocationManager locationManager = new CLLocationManager();
            locationManager.RequestWhenInUseAuthorization();
            DonateIngredientsMapView.Delegate = new DonateFoodMapDelegate();
            var usersLocation = new CLLocationCoordinate2D(DonateIngredientsMapView.UserLocation.Coordinate.Latitude, DonateIngredientsMapView.UserLocation.Coordinate.Longitude);
            DonateIngredientsMapView.AddAnnotation(new MKPointAnnotation()
            {
                Title = "User Location",
                Coordinate = usersLocation
            });
            DonateIngredientsMapView.SetCenterCoordinate(DonateIngredientsMapView.UserLocation.Coordinate, true);
            var searchRequest = new MKLocalSearchRequest("Food banks");
            searchRequest.Region = new MKCoordinateRegion(DonateIngredientsMapView.UserLocation.Coordinate, new MKCoordinateSpan(0.25, 0.25));
            var localSearch = new MKLocalSearch(searchRequest);

            localSearch.Start(delegate (MKLocalSearchResponse response, NSError error) {
                if (response != null && error == null)
                {
                    DonateIngredientsMapView.AddAnnotations(GetSearchResultsPointAnnotations(response.MapItems));
                }
                else
                {
                    ShowAlert("Alert", "No Food banks within your area!", "OK", null);
                }
            });
        }

        MKPointAnnotation[] GetSearchResultsPointAnnotations(MKMapItem[] items)
        {
            MKPointAnnotation[] annotations = new MKPointAnnotation[items.Length];
            for (int i = 0; i < items.Length; i++)
            {
                annotations[i] = new MKPointAnnotation();
                annotations[i].Title = string.Format("{0}: {1}", items[i].Name, items[i].PhoneNumber);
                annotations[i].Coordinate = items[i].Placemark.Coordinate;
            }
            return annotations;
        }
    }
}

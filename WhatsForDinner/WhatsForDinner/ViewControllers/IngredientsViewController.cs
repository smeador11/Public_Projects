// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using WhatsForDinner.JsonModels;
using WhatsForDinner.Presenters;
using WhatsForDinner.Presenters.Contracts;
using WhatsForDinner.ViewControllers.Contracts;

namespace WhatsForDinner.ViewControllers
{
	public partial class IngredientsViewController : BaseWhatsForDinnerViewController, IngredientsViewControllerInterface
    {
        public Action<string, string> FindRecipesClickCallback { get; set; }
        IngredientsPresenterInterface Presenter = new IngredientsPresenter();

        public IngredientsViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            Title = "Recipe By Ingredients";
            FindRecipesButton.TouchUpInside += FindRecipesButton_TouchUpInside;
            
            SetUpTextViewBorders();
            Presenter.BindToView(this);
        }

        public void SetUpTextViewBorders()
        {
            IngredientsTextView.Layer.CornerRadius = 5;
            IngredientsTextView.Layer.BorderColor = UIColor.SystemBlue.CGColor;
            IngredientsTextView.Layer.BorderWidth = 1;
            NumRecipesTextView.Layer.CornerRadius = 5;
            NumRecipesTextView.Layer.BorderColor = UIColor.SystemBlue.CGColor;
            NumRecipesTextView.Layer.BorderWidth = 1;
        }
        public void FailTextViewFields(bool noIngredients, bool noNumRecipes)
        {
            IngredientsTextView.Layer.BorderColor = noIngredients ? UIColor.Red.CGColor : UIColor.SystemBlue.CGColor;
            NumRecipesTextView.Layer.BorderColor = noNumRecipes ? UIColor.Red.CGColor : UIColor.SystemBlue.CGColor;
        }
        public override void BeginBackgroundTask()
        {
            base.BeginBackgroundTask();
            RecipeRequestActivityIndicator.StartAnimating();
            RecipeRequestActivityIndicator.Hidden = false;
        }
        public override void EndBackgroundTask()
        {
            base.EndBackgroundTask();
            RecipeRequestActivityIndicator.StopAnimating();
            RecipeRequestActivityIndicator.Hidden = true;
        }
        private void FindRecipesButton_TouchUpInside(object sender, EventArgs e)
        {
            FindRecipesClickCallback.Invoke(IngredientsTextView.Text, NumRecipesTextView.Text);
        }
        public void MoveToRecipesViewController(RecipeByIngredientJsonModel[] recipes)
        {
            InvokeOnMainThread(() => NavigationController.PushViewController(ControllerFactory.GetRecipesViewController(Storyboard, recipes), false));
        }
    }
}
